[{"/Users/kamilkozlowski/Coding/expenses-frontend/src/index.js":"1","/Users/kamilkozlowski/Coding/expenses-frontend/src/reportWebVitals.js":"2","/Users/kamilkozlowski/Coding/expenses-frontend/src/auth/useProvideAuth.js":"3","/Users/kamilkozlowski/Coding/expenses-frontend/src/http/axiosInstance.js":"4","/Users/kamilkozlowski/Coding/expenses-frontend/src/history/history.js":"5","/Users/kamilkozlowski/Coding/expenses-frontend/src/auth/authContext.js":"6","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/App/App.js":"7","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Login/Login.js":"8","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Expenses/ExpensesTab.js":"9","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Navbar/CustomNavbar.js":"10","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Link/RawLink.js":"11","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Expenses/AddEditExpense.js":"12","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Category/CategoryTab.js":"13","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Category/AddEditCategory.js":"14"},{"size":515,"mtime":1611168827790,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610993622952,"results":"17","hashOfConfig":"16"},{"size":835,"mtime":1611167124945,"results":"18","hashOfConfig":"16"},{"size":876,"mtime":1611247769622,"results":"19","hashOfConfig":"16"},{"size":112,"mtime":1611008968257,"results":"20","hashOfConfig":"16"},{"size":160,"mtime":1611009574131,"results":"21","hashOfConfig":"16"},{"size":2315,"mtime":1611272293554,"results":"22","hashOfConfig":"16"},{"size":2663,"mtime":1611394906961,"results":"23","hashOfConfig":"16"},{"size":2090,"mtime":1611269672190,"results":"24","hashOfConfig":"16"},{"size":2840,"mtime":1611274151833,"results":"25","hashOfConfig":"16"},{"size":251,"mtime":1611184711759,"results":"26","hashOfConfig":"16"},{"size":4822,"mtime":1611270452959,"results":"27","hashOfConfig":"16"},{"size":2485,"mtime":1611273994824,"results":"28","hashOfConfig":"16"},{"size":2585,"mtime":1611272354596,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1aeg2nl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/Users/kamilkozlowski/Coding/expenses-frontend/src/index.js",[],["66","67"],"/Users/kamilkozlowski/Coding/expenses-frontend/src/reportWebVitals.js",[],"/Users/kamilkozlowski/Coding/expenses-frontend/src/auth/useProvideAuth.js",[],"/Users/kamilkozlowski/Coding/expenses-frontend/src/http/axiosInstance.js",["68"],"import axios from \"axios\";\n\nexport default (authService) => {\n    const SERVER_URL = 'http://localhost:8080';\n    const TOKEN = 'token';\n\n    const axiosInstance = axios.create({\n        baseURL: SERVER_URL\n    });\n\n    axiosInstance.interceptors.request.use(\n        config => {\n            const token = localStorage.getItem(TOKEN);\n            if (token) {\n                config.headers['Authorization'] = `Bearer ${token}`;\n            }\n            return config;\n        },\n        error => Promise.reject(error)\n    );\n\n    axiosInstance.interceptors.response.use(\n        (response) => response,\n        error => {\n            console.log(error.response.status);\n            if (error.response.status === 401) {\n                if (authService) authService.logOut()\n            }\n            return Promise.reject(error);\n        }\n    );\n\n    return axiosInstance;\n}","/Users/kamilkozlowski/Coding/expenses-frontend/src/history/history.js",[],"/Users/kamilkozlowski/Coding/expenses-frontend/src/auth/authContext.js",[],"/Users/kamilkozlowski/Coding/expenses-frontend/src/components/App/App.js",["69","70","71","72","73"],"import './App.css';\nimport React, {useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Router} from \"react-router\";\nimport {\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport useProvideAuth from \"../../auth/useProvideAuth\";\nimport {useAuth, authContext} from \"../../auth/authContext\";\nimport ExpensesTab from \"../Expenses/ExpensesTab\";\nimport Login from \"../Login/Login\";\nimport history from \"../../history/history\";\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\nimport CustomNavbar from \"../Navbar/CustomNavbar\";\nimport AddEditExpense from \"../Expenses/AddEditExpense\";\nimport CategoryTab from \"../Category/CategoryTab\";\nimport AddEditCategory from \"../Category/AddEditCategory\";\n\n\nfunction App() {\n    return (\n        <ProvideAuth>\n            <Router history={history}>\n                <CustomNavbar/>\n                <Switch>\n                    <Route exact path={\"/\"}>\n                        <Redirect to={{\n                            pathname: \"/login\"\n                        }}/>\n                    </Route>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <PrivateRoute exact path=\"/expenses\" component={ExpensesTab}/>\n                    <PrivateRoute exact path=\"/expenses/edit\" component={AddEditExpense}/>\n                    <PrivateRoute exact path=\"/categories\" component={CategoryTab}/>\n                    <PrivateRoute exact path=\"/categories/edit\" component={AddEditCategory}/>\n                </Switch>\n            </Router>\n        </ProvideAuth>\n    );\n}\n\nfunction PrivateRoute({children, ...rest}) {\n    let auth = useAuth();\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                auth.isAuthenticated ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: {from: location}\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nfunction ProvideAuth({children}) {\n    const auth = useProvideAuth();\n    return (\n        <authContext.Provider value={auth}>\n            {children}\n        </authContext.Provider>\n    );\n}\n\nexport default App;\n","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Login/Login.js",[],"/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Expenses/ExpensesTab.js",["74","75","76","77","78","79","80","81","82"],"import {useAuth} from \"../../auth/authContext\";\nimport React, {useEffect, useState} from \"react\";\nimport axiosInstance from \"../../http/axiosInstance\";\nimport {DropdownButton, Form, FormControl, InputGroup, Tab, Table, Tabs, Dropdown} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport {Redirect} from \"react-router\";\nimport RawLink from \"../Link/RawLink\";\n\nconst ExpensesTab = () => {\n\n    let auth = useAuth();\n    const [expenses, setExpenses] = useState([]);\n\n    useEffect(() => {\n        fetchExpenses();\n    }, []);\n\n    const fetchExpenses = () => {\n        axiosInstance(auth)\n            .get('/expense')\n            .then(res => setExpenses(res.data))\n    }\n\n    const removeExpense = (id) => {\n        axiosInstance(auth)\n            .delete(`/expense/${id}`)\n            .then(() => fetchExpenses());\n    }\n\n    return (\n        <Table size={\"sm\"} responsive variant={\"secondary\"}>\n            <thead>\n            <tr>\n                <th colSpan={\"2\"}>Description</th>\n                <th>Category</th>\n                <th>Value</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {expenses && expenses.map(e => (\n                <tr key={e.id}>\n                    <td colSpan={\"2\"}>{e.description}</td>\n                    <td>{e.category.name}</td>\n                    <td>{e.value}</td>\n                    <td>\n                        <Button size={\"sm\"} className=\"m-1\" variant=\"danger\" onClick={() => removeExpense(e.id)}>\n                            ðŸ…§\n                        </Button>\n                        <Button as={RawLink} size={\"sm\"} className=\"m-1\" variant=\"warning\" to={{\n                            pathname: \"/expenses/edit\",\n                            state: {\n                                expense: e\n                            }\n                        }}>\n                            âœŽ\n                        </Button>\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default ExpensesTab;","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Navbar/CustomNavbar.js",[],"/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Link/RawLink.js",[],["83","84"],"/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Expenses/AddEditExpense.js",["85","86"],"import React, {useEffect, useState} from \"react\";\nimport axiosInstance from \"../../http/axiosInstance\";\nimport {useAuth} from \"../../auth/authContext\";\nimport {Redirect} from \"react-router\";\nimport {Col, Container, Dropdown, DropdownButton, InputGroup, Row} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport history from \"../../history/history\";\n\nconst AddEditExpense = (props) => {\n    let expense = props.location && props.location.state && props.location.state.expense ? props.location.state.expense : undefined;\n    const [categories, setCategories] = useState([]);\n    const [expenseToAdd, setExpenseToAdd] = useState(expense ?\n        {...expense} : {\n            description: '',\n            value: 0,\n            category: {\n                id: 0,\n                name: ''\n            }\n        });\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        // fetchExpenses();\n        fetchCategories();\n    }, []);\n\n    let auth = useAuth();\n    const fetchCategories = () => {\n        axiosInstance(auth)\n            .get('/category')\n            .then(res => setCategories(res.data))\n    };\n\n    function saveExpense(e) {\n        e.preventDefault();\n        expense ?\n            axiosInstance(auth)\n                .put(`/expense/${expense.id}`, {\n                    description: expenseToAdd.description,\n                    value: expenseToAdd.value,\n                    category: expenseToAdd.category.id\n                })\n                .then(() => history.push(\"/expenses\"))\n                .catch(() => setErrorMessage('Unable to update an expense')) :\n            axiosInstance(auth)\n                .post('/expense', {\n                    description: expenseToAdd.description,\n                    value: expenseToAdd.value,\n                    category: expenseToAdd.category.id\n                })\n                .then(() => history.push(\"/expenses\"))\n                .catch(() => setErrorMessage('Unable to create an expense'));\n\n    }\n\n    return (\n        <Container className=\"align-items-center d-flex flex-column justify-content-center\">\n            <Container as={Col} sm=\"12\" md=\"8\" lg=\"6\" className={\"d-flex flex-column justify-content-center\"}>\n                <Form onSubmit={saveExpense}>\n                    <Form.Group controlId=\"formCategory\">\n                        <Form.Control\n                            style={{opacity: '0.95'}}\n                            size=\"lg\"\n                            type=\"text\"\n                            placeholder=\"Description\"\n                            value={expenseToAdd.description}\n                            onChange={(e) => setExpenseToAdd({...expenseToAdd, description: e.target.value})}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formCategory\" className={\"btn-block\"}>\n                        <DropdownButton\n                            className={\"btn-block\"}\n                            as={InputGroup.Prepend}\n                            variant=\"light\"\n                            title={expenseToAdd.category && expenseToAdd.category.name ? expenseToAdd.category.name : 'Category'}\n                            id=\"category-dropdown\"\n                        >\n                            {categories && categories.map(category =>\n                                <Dropdown.Item\n                                    key={category.id}\n                                    onSelect={() => setExpenseToAdd({...expenseToAdd, category})}\n                                    href=\"#\"\n                                >\n                                    {category.name}\n                                </Dropdown.Item>\n                            )}\n                        </DropdownButton>\n                    </Form.Group>\n                    <Form.Group controlId=\"formValue\">\n                        <Form.Control\n                            style={{opacity: '0.95'}}\n                            size=\"lg\"\n                            type=\"text\"\n                            placeholder=\"Value\"\n                            value={expenseToAdd.value}\n                            onChange={(e) => setExpenseToAdd({...expenseToAdd, value: e.target.value})}\n                        />\n                    </Form.Group>\n                    {errorMessage && <p className=\"warning text-center\">{errorMessage}</p>}\n                    <Row className=\"justify-content-center\">\n                        <Button variant=\"dark\" type=\"submit\" size={\"md\"}>\n                            {expense ? 'Update' : 'Create'}\n                        </Button>\n                    </Row>\n                </Form>\n            </Container>\n        </Container>\n    );\n}\n\nexport default AddEditExpense;","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Category/CategoryTab.js",["87"],"import {useAuth} from \"../../auth/authContext\";\nimport React, {useEffect, useState} from \"react\";\nimport axiosInstance from \"../../http/axiosInstance\";\nimport {Alert, Table} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport RawLink from \"../Link/RawLink\";\nimport '../../index.css'\n\nconst CategoryTab = () => {\n    let auth = useAuth();\n    const [categories, setCategories] = useState([]);\n    const [cannotDeleteMessage, setCannotDeleteMessage] = useState(false);\n\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n\n    const fetchCategories = () => {\n        axiosInstance(auth)\n            .get('/category')\n            .then(res => setCategories(res.data))\n    };\n\n    const removeCategory = (id) => {\n        axiosInstance(auth)\n            .delete(`/category/${id}`)\n            .then(() => fetchCategories())\n            .catch(() => setCannotDeleteMessage(true));\n    }\n\n    return (\n        <Table size={\"sm\"} responsive variant={\"secondary\"} >\n            {cannotDeleteMessage && (\n                <Alert className=\"position-absolute text-center full-width sticky-top\" variant=\"danger\" onClose={() => setCannotDeleteMessage(false)} dismissible>\n                    <Alert.Heading>Unable to delete category</Alert.Heading>\n                    <p>Category is in use or a server error occurred</p>\n                </Alert>\n            )}\n            <thead>\n            <tr>\n                <th colSpan={\"4\"}>Description</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {categories && categories.map(category => (\n                <tr key={category.id}>\n                    <td colSpan={\"4\"}>{category.name}</td>\n                    <td>\n                        <Button size={\"sm\"}\n                                className=\"m-1\"\n                                variant=\"danger\"\n                                onClick={() => removeCategory(category.id)}\n                        >\n                            ðŸ…§\n                        </Button>\n                        <Button as={RawLink} size={\"sm\"} className=\"m-1\" variant=\"warning\" to={{\n                            pathname: \"/categories/edit\",\n                            state: {category}\n                        }}>\n                            âœŽ\n                        </Button>\n                    </td>\n                </tr>\n            ))}\n            </tbody>\n        </Table>\n    );\n\n}\nexport default CategoryTab;","/Users/kamilkozlowski/Coding/expenses-frontend/src/components/Category/AddEditCategory.js",["88","89","90"],"import React, {useState} from \"react\";\nimport {useAuth} from \"../../auth/authContext\";\nimport axiosInstance from \"../../http/axiosInstance\";\nimport history from \"../../history/history\";\nimport {Col, Container, Dropdown, DropdownButton, InputGroup, Row} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst AddEditCategory = (props) => {\n    let category = props.location && props.location.state && props.location.state.category ? props.location.state.category : undefined;\n    const [categoryToAdd, setCategoryToAdd] = useState(category ? {...category} : {\n        name: ''\n    });\n    const [errorMessage, setErrorMessage] = useState('');\n\n    let auth = useAuth();\n\n    function saveCategory(e) {\n        e.preventDefault();\n        category ?\n            axiosInstance(auth)\n                .put(`/category/${category.id}`, {\n                    name: categoryToAdd.name\n                })\n                .then(() => history.push(\"/categories\"))\n                .catch(() => setErrorMessage('Unable to update a category')) :\n            axiosInstance(auth)\n                .post('/category', {\n                    name: categoryToAdd.name\n                })\n                .then(() => history.push(\"/categories\"))\n                .catch(() => setErrorMessage('Unable to create a category'));\n\n    }\n\n    return (\n        <Container className=\"align-items-center d-flex flex-column justify-content-center\">\n            <Container as={Col} sm=\"12\" md=\"8\" lg=\"6\" className={\"d-flex flex-column justify-content-center\"}>\n                <Form onSubmit={saveCategory}>\n                    <Form.Group controlId=\"formName\">\n                        <Form.Control\n                            style={{opacity: '0.95'}}\n                            size=\"lg\"\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            value={categoryToAdd.name}\n                            onChange={(e) => setCategoryToAdd({...categoryToAdd, name: e.target.value})}\n                        />\n                    </Form.Group>\n                    {errorMessage && <p className=\"warning text-center\">{errorMessage}</p>}\n                    <Row className=\"justify-content-center\">\n                        <Button variant=\"dark\" type=\"submit\" size={\"md\"}>\n                            {category ? 'Update' : 'Create'}\n                        </Button>\n                    </Row>\n                </Form>\n            </Container>\n        </Container>\n    );\n}\n\nexport default AddEditCategory;",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":1,"nodeType":"97","endLine":34,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":24},{"ruleId":"98","severity":1,"message":"102","line":8,"column":5,"nodeType":"100","messageId":"101","endLine":8,"endColumn":9},{"ruleId":"98","severity":1,"message":"103","line":16,"column":9,"nodeType":"100","messageId":"101","endLine":16,"endColumn":12},{"ruleId":"98","severity":1,"message":"104","line":16,"column":14,"nodeType":"100","messageId":"101","endLine":16,"endColumn":20},{"ruleId":"98","severity":1,"message":"105","line":16,"column":22,"nodeType":"100","messageId":"101","endLine":16,"endColumn":33},{"ruleId":"98","severity":1,"message":"106","line":4,"column":9,"nodeType":"100","messageId":"101","endLine":4,"endColumn":23},{"ruleId":"98","severity":1,"message":"107","line":4,"column":25,"nodeType":"100","messageId":"101","endLine":4,"endColumn":29},{"ruleId":"98","severity":1,"message":"108","line":4,"column":31,"nodeType":"100","messageId":"101","endLine":4,"endColumn":42},{"ruleId":"98","severity":1,"message":"109","line":4,"column":44,"nodeType":"100","messageId":"101","endLine":4,"endColumn":54},{"ruleId":"98","severity":1,"message":"110","line":4,"column":56,"nodeType":"100","messageId":"101","endLine":4,"endColumn":59},{"ruleId":"98","severity":1,"message":"111","line":4,"column":68,"nodeType":"100","messageId":"101","endLine":4,"endColumn":72},{"ruleId":"98","severity":1,"message":"112","line":4,"column":74,"nodeType":"100","messageId":"101","endLine":4,"endColumn":82},{"ruleId":"98","severity":1,"message":"113","line":6,"column":9,"nodeType":"100","messageId":"101","endLine":6,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":16,"column":8,"nodeType":"116","endLine":16,"endColumn":10,"suggestions":"117"},{"ruleId":"91","replacedBy":"118"},{"ruleId":"93","replacedBy":"119"},{"ruleId":"98","severity":1,"message":"113","line":4,"column":9,"nodeType":"100","messageId":"101","endLine":4,"endColumn":17},{"ruleId":"114","severity":1,"message":"120","line":27,"column":8,"nodeType":"116","endLine":27,"endColumn":10,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"120","line":16,"column":8,"nodeType":"116","endLine":16,"endColumn":10,"suggestions":"122"},{"ruleId":"98","severity":1,"message":"112","line":5,"column":25,"nodeType":"100","messageId":"101","endLine":5,"endColumn":33},{"ruleId":"98","severity":1,"message":"106","line":5,"column":35,"nodeType":"100","messageId":"101","endLine":5,"endColumn":49},{"ruleId":"98","severity":1,"message":"109","line":5,"column":51,"nodeType":"100","messageId":"101","endLine":5,"endColumn":61},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Nav' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'Dropdown' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchExpenses'. Either include it or remove the dependency array.","ArrayExpression",["125"],["123"],["124"],"React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.",["126"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},"Update the dependencies array to be: [fetchExpenses]",{"range":"133","text":"134"},"Update the dependencies array to be: [fetchCategories]",{"range":"135","text":"136"},{"range":"137","text":"136"},[543,545],"[fetchExpenses]",[1017,1019],"[fetchCategories]",[548,550]]